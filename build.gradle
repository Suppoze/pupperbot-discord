group 'hu.suppoze.pupperbot'
version '0.3.5'

buildscript {
    ext {
        kotlin_version = '1.2.31'
        kotlinx_coroutines_version = '0.22.5'
        kotlin_logging_version = '1.5.4'
        log4j2_version = '2.10.0'
        reflections_version = '0.9.11'
        fuel_version = '1.12.1'
        gson_version = '2.8.2'
        jda_version = '3.6.0_354'
        kodein_version = '5.0.0'
        jsoup_version = '1.11.2'
        shadow_plugin_version = '2.0.3'
    }

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadow_plugin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = "hu.suppoze.pupperbot.PupperBotApplication"

kapt {
    generateStubs = true
}

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "https://dl.bintray.com/kodein-framework/Kodein-DI/" } // KodeIn workaround
}

dependencies {
    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"

    // Logging
    compile "io.github.microutils:kotlin-logging:$kotlin_logging_version"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:$log4j2_version"

    // Discord
    compile "net.dv8tion:JDA:$jda_version"

    // Reflection
    compile "org.reflections:reflections:$reflections_version"

    // Networking
    compile "com.github.kittinunf.fuel:fuel:$fuel_version"
    compile "com.github.kittinunf.fuel:fuel-gson:$fuel_version"
    compile "com.google.code.gson:gson:$gson_version"

    // DI
    compile "org.kodein.di:kodein-di-generic-jvm:$kodein_version"

    // Scraper
    compile "org.jsoup:jsoup:$jsoup_version"
}

task copyResources(type: Copy) {
    from 'token_release.txt'
    into 'build/libs'
    rename ('token_release.txt', 'token.txt')
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

kapt {
    mapDiagnosticLocations = true
}